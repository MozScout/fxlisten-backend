service: register

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'} 
  environment:
    ENV: ${opt:stage, 'local'}
    REGION: ${self:provider.region}
    JWT_SECRET: ${ssm:JWT_SECRET~true}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:*"
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/*"

plugins:
  - serverless-offline
  - serverless-dynamodb-autoscaling

custom:
  serverless-offline:
    port: 4000
  capacities:
    - table: usersTable
      read:
        minimum: 5
        maximum: 100
        usage: 0.75
      write:
        minimum: 5
        maximum: 100
        usage: 0.75

functions:
  register:
    handler: handler.register
    events:
      - http:
          path: register
          method: post
          cors: true

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users-${self:provider.environment.ENV}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
